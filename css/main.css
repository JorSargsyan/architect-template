/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}#nav-list,body{margin:0} menu,article,aside,details,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=submit], [type=reset],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}#header{color:#fff;height:100px;background:rgba(255,255,255,0);padding:5% 0}#header a{margin-left:25px;font-size:30px;color:#fff!important}#nav-list li{font-size:20px;margin-left:14%}.parallax-container{height:800px}.container{max-width:900px!important}.cube{margin:-10px;float:left;height:50px;width:50px;border:5px solid #fff}.cube p{font-size:22px;margin:7px 3px}#main{color:#fff;background:#2b2b2b}#main .content .innerSect li a,#main .news li a{color:#fff!important}#main h5{margin-top:100px;margin-bottom:50px}#main .content{height:430px}#main .content .project-img{height:360px;width:530px}#main .content .innerSect{margin:30px 80px}#main .content .innerSect li{list-style:none;padding-top:50px}#main .news{margin-bottom:150px}#main .news h1{font-size:150px;font-weight:bolder;padding:0;margin:0;text-align:center}#main .news li{list-style:none;padding-top:50px}.footer{background:#000;font-size:15px;color:gray}.footer .footer-text{background:rgba(255,255,255,0)}.footer .footer-text h6{margin:50px 0}.footer .footer-text p{margin:100px 0}.footer .footer-text span{margin-right:19%}.footer .footer-mail H6{margin:50px 0}.footer .footer-mail div input{height:30px!important}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
